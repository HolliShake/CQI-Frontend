{"remainingRequest":"/home/andydevs69420/Documents/DTO/CQIFrontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/andydevs69420/Documents/DTO/CQIFrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/andydevs69420/Documents/DTO/CQIFrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/andydevs69420/Documents/DTO/CQIFrontend/src/components/nav-bar.vue?vue&type=template&id=42c37e09&","dependencies":[{"path":"/home/andydevs69420/Documents/DTO/CQIFrontend/src/components/nav-bar.vue","mtime":1613715120000},{"path":"/home/andydevs69420/Documents/DTO/CQIFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1678066322946},{"path":"/home/andydevs69420/Documents/DTO/CQIFrontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1678066324766},{"path":"/home/andydevs69420/Documents/DTO/CQIFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1678066322946},{"path":"/home/andydevs69420/Documents/DTO/CQIFrontend/node_modules/vue-loader/lib/index.js","mtime":1678066324180}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}